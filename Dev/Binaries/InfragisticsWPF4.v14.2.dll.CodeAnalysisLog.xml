<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="D:\Repos\Warewolf Closed Source\ThirdParty\Infragistics.14.2\Windows\bin\Release\InfragisticsWPF4.v14.2.dll">
   <Modules>
    <Module Name="infragisticswpf4.v14.2.dll">
     <Namespaces>
      <Namespace Name="Infragistics.Windows.Helpers">
       <Types>
        <Type Name="NativeWindowMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AdjustWindowRectEx(Infragistics.Windows.Helpers.NativeWindowMethods+RECT&amp;,System.Int32,System.Boolean,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.AdjustWindowRectEx(ref NativeWindowMethods.RECT, int, bool, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.CallNextHookEx(IntPtr, int, IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CombineRgn(System.IntPtr,System.IntPtr,System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+RegionCombineMode)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.CombineRgn(IntPtr, IntPtr, IntPtr, NativeWindowMethods.RegionCombineMode)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRectRgn(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.CreateRectRgn(int, int, int, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRoundRectRgn(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.CreateRoundRectRgn(int, int, int, int, int, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefWindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.DefWindowProc(IntPtr, int, IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteObject(System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.DeleteObject(IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DwmDefWindowProc(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.DwmDefWindowProc(IntPtr, uint, IntPtr, IntPtr, out int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DwmExtendFrameIntoClientArea(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+MARGINS&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.DwmExtendFrameIntoClientArea(IntPtr, ref NativeWindowMethods.MARGINS)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DwmGetWindowAttribute(System.IntPtr,System.UInt32,Infragistics.Windows.Helpers.NativeWindowMethods+RECT&amp;,System.UInt32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.DwmGetWindowAttribute(IntPtr, uint, ref NativeWindowMethods.RECT, uint)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DwmIsCompositionEnabled(System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.DwmIsCompositionEnabled(out bool)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableMenuItem(System.IntPtr,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.EnableMenuItem(IntPtr, int, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumChildWindows(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+EnumWindowsProc,System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.EnumChildWindows(IntPtr, NativeWindowMethods.EnumWindowsProc, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumThreadWindows(System.Int32,Infragistics.Windows.Helpers.NativeWindowMethods+EnumWindowsProc,System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.EnumThreadWindows(int, NativeWindowMethods.EnumWindowsProc, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAncestor(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetAncestor(IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCapture()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetCapture()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCaretBlinkTime()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetCaretBlinkTime()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClassLongPtr32(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetClassLongPtr32(IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClassLongPtr64(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetClassLongPtr64(IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClientRect(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+RECT&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetClientRect(IntPtr, ref NativeWindowMethods.RECT)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClipboardFormatName(System.Int32,System.Text.StringBuilder,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetClipboardFormatName(int, StringBuilder, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentThreadId()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetCurrentThreadId()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCursorPos(Infragistics.Windows.Helpers.NativeWindowMethods+POINT&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetCursorPos(ref NativeWindowMethods.POINT)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDC(System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetDC(IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDCEx(System.IntPtr,System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetDCEx(IntPtr, IntPtr, uint)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDoubleClickTime()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetDoubleClickTime()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFocus()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetFocus()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMenuState(System.IntPtr,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetMenuState(IntPtr, int, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMessageExtraInfo()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetMessageExtraInfo()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMessagePos()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetMessagePos()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMessageTime()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetMessageTime()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMonitorInfo(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+MONITORINFO&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetMonitorInfo(IntPtr, out NativeWindowMethods.MONITORINFO)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMonitorInfo(System.Runtime.InteropServices.HandleRef,Infragistics.Windows.Helpers.NativeWindowMethods+MONITIORINFOEX)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetMonitorInfo(HandleRef, NativeWindowMethods.MONITIORINFOEX)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParent(System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetParent(IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemMenu(System.IntPtr,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetSystemMenu(IntPtr, bool)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemMetrics(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetSystemMetrics(int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindow(System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindow(IntPtr, uint)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowDC(System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindowDC(IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowInfo(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+WINDOWINFO&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindowInfo(IntPtr, ref NativeWindowMethods.WINDOWINFO)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowLong32(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindowLong32(IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowLongPtr64(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindowLongPtr64(IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowPlacement(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+WINDOWPLACEMENT&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindowPlacement(IntPtr, ref NativeWindowMethods.WINDOWPLACEMENT)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowRect(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+RECT&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.GetWindowRect(IntPtr, ref NativeWindowMethods.RECT)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAppThemed()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.IsAppThemed()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsThemeActive()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.IsThemeActive()' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsWindowVisible(System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.IsWindowVisible(IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadImage(System.IntPtr,System.Int32,System.UInt32,System.Int32,System.Int32,System.UInt32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.LoadImage(IntPtr, int, uint, int, int, uint)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapWindowPoints(System.IntPtr,System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+POINT&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.MapWindowPoints(IntPtr, IntPtr, ref NativeWindowMethods.POINT, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MonitorFromPoint(Infragistics.Windows.Helpers.NativeWindowMethods+POINT,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.MonitorFromPoint(NativeWindowMethods.POINT, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MonitorFromRect(Infragistics.Windows.Helpers.NativeWindowMethods+RECT&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.MonitorFromRect(ref NativeWindowMethods.RECT, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MonitorFromWindow(System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.MonitorFromWindow(IntPtr, uint)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.PostMessage(IntPtr, int, IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReleaseDC(System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.ReleaseDC(IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.Int32,System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+TITLEBARINFOEX&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SendMessage(IntPtr, int, IntPtr, ref NativeWindowMethods.TITLEBARINFOEX)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SendMessage(IntPtr, int, IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowLong32(System.IntPtr,System.Int32,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SetWindowLong32(IntPtr, int, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowLongPtr64(System.IntPtr,System.Int32,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SetWindowLongPtr64(IntPtr, int, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowPlacement(System.IntPtr,Infragistics.Windows.Helpers.NativeWindowMethods+WINDOWPLACEMENT&amp;)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SetWindowPlacement(IntPtr, ref NativeWindowMethods.WINDOWPLACEMENT)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SetWindowPos(IntPtr, IntPtr, int, int, int, int, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowRgn(System.IntPtr,System.IntPtr,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SetWindowRgn(IntPtr, IntPtr, bool)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowsHookEx(System.Int32,Infragistics.Windows.Helpers.NativeWindowMethods+HookProc,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.SetWindowsHookEx(int, NativeWindowMethods.HookProc, IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowWindow(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.ShowWindow(IntPtr, int)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrackPopupMenuEx(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.TrackPopupMenuEx(IntPtr, uint, int, int, IntPtr, IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnhookWindowsHookEx(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122" Status="Active" Created="2014-12-09 09:03:39Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning">P/Invoke method 'NativeWindowMethods.UnhookWindowsHookEx(IntPtr)' is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="PInvokesShouldNotBeSafeCriticalFxCopRule" Category="Microsoft.Security" CheckId="CA5122">
   <Name>P/Invoke declarations should not be safe-critical.</Name>
   <Description>Since P/Invokes may not be called by transparent code, they should not be marked as safe-critical methods.  Doing so can lead to confusion on the part of developers who may believe that their transparent code should be able to call the P/Invoke method since it is marked safe-critical.</Description>
   <Resolution Name="Default">P/Invoke method {0} is marked safe-critical.  Since P/Invokes may only be called by critical code, this declaration should either be marked as security critical, or have its annotation removed entirely to avoid being misleading.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
